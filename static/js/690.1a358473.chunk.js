"use strict";(self.webpackChunk_kne_components_speech_text=self.webpackChunk_kne_components_speech_text||[]).push([[690],{5690:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o,manifest:()=>c});var s=n(7783),a=n(8833);const o={SpeechText:{name:"speech-text",summary:'<h1>speech-text</h1>\n<h3>\u5b89\u88c5</h3>\n<pre><code class="language-shell">npm i --save @kne-components/speech-text\n</code></pre>',packageName:"@kne-components/speech-text",api:'<h4>\u9ed8\u8ba4\u5bfc\u51fa speech(options):Promise</h4>\n<p>\u4e0a\u4f20\u8bed\u97f3\u6587\u4ef6\u8bc6\u522b</p>\n<p>example:</p>\n<pre><code class="language-javascript">const {start, stop} = await speech(options);\n</code></pre>\n<h4>options:Object</h4>\n<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>\u4e0a\u4f20\u6587\u4ef6\u8bed\u97f3\u8bc6\u522b\u76ee\u6807\u63a5\u53e3\u5730\u5740</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>\u5f00\u59cb\u5f55\u97f3 start():Promise</h4>\n<p>example:</p>\n<pre><code class="language-javascript">await start();\n</code></pre>\n<h4>\u7ed3\u675f\u5f55\u97f3 stop():Promise</h4>\n<p>example:</p>\n<pre><code class="language-javascript">const response = await stop();\nconst {code, message} = response.data;\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>code</td>\n<td>\u540e\u7aef\u63a5\u53e3\u8fd4\u56de\u72b6\u6001\u503c,200\u4e3a\u6210\u529f</td>\n<td>number</td>\n<td>-</td>\n</tr>\n<tr>\n<td>message</td>\n<td>\u8bed\u97f3\u8f6c\u6362\u7ed3\u679c</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>speechTextRealTime(options):Promise</h3>\n<p>\u5b9e\u65f6\u8bed\u97f3\u8bc6\u522b</p>\n<p>example:</p>\n<pre><code class="language-javascript">const {start, stop} = await speechTextRealTime(options);\n</code></pre>\n<h4>options:Object</h4>\n<table>\n<thead>\n<tr>\n<th>\u5c5e\u6027\u540d</th>\n<th>\u8bf4\u660e</th>\n<th>\u7c7b\u578b</th>\n<th>\u9ed8\u8ba4\u503c</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>getToken</td>\n<td>\u83b7\u53d6Token\u65b9\u6cd5:getToken():{token,appKey}</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>\u8bc6\u522b\u6587\u672c\u5185\u5bb9\u53d1\u751f\u53d8\u5316\u65f6\u56de\u8c03\u51fd\u6570</td>\n<td>function</td>\n<td>({message}) =&gt; {console.log(message);}</td>\n</tr>\n<tr>\n<td>getGatewayUrl</td>\n<td>\u83b7\u53d6WebSocket\u7684url\u5730\u5740: getGatewayUrl({token}):url,\u53ef\u4ee5\u83b7\u53d6\u5230token\u53c2\u6570</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onComplete</td>\n<td>\u5f55\u97f3\u7ed3\u675f\u56de\u8c03\u65b9\u6cd5</td>\n<td>function</td>\n<td>-</td>\n</tr>\n<tr>\n<td>url</td>\n<td>\u4fdd\u5b58\u5f55\u97f3\u6587\u4ef6url</td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>\u5f00\u59cb\u5f55\u97f3 start():Promise</h4>\n<p>example:</p>\n<pre><code class="language-javascript">await start({\n    getToken: () =&gt; {\n    },\n    onChange: ({message}) =&gt; {\n    },\n    onComplete: ({file, taskId, messageId, message, chunks}) =&gt; {\n    }\n});\n</code></pre>\n<h4>\u7ed3\u675f\u5f55\u97f3 stop():Promise</h4>\n<p>example:</p>\n<pre><code class="language-javascript">await stop();\n</code></pre>',example:{isFull:!0,className:"speech_text_e4cb6",style:".speech_text_e4cb6 .ant-card {\n  border-color: black;\n  text-align: center;\n  width: 200px;\n}",list:[{title:"\u5f55\u97f3\u6587\u4ef6\u4e0a\u4f20\u8bc6\u522b",description:"\u5f55\u97f3\u6587\u4ef6\u4e0a\u4f20\u8bc6\u522b",code:"const {default: speech} = _SpeechText;\nconst {Button, Alert, Flex} = antd;\nconst {useState, useEffect, useRef} = React;\n\nconst BaseExample = () => {\n    const [message, setMessage] = useState({type: 'info', message: '\u5c1a\u672a\u5f00\u59cb'});\n    const [recording, setRecording] = useState(false);\n    const recordRef = useRef(null);\n    useEffect(() => {\n        recordRef.current = speech({url: 'https://ct.deeperagi.com/action/papi/ai/vCMA01/uploadWavFile'});\n    }, []);\n    return <Flex vertical gap={10}>\n        <Alert type={message.type} message={message.message}/>\n        <div>\n            <Button onClick={() => {\n                recordRef.current.then(async ({start, stop}) => {\n                    setMessage({type: 'warning', message: '\u6b63\u5728\u8bc6\u522b\uff0c\u8bf7\u7a0d\u7b49'});\n                    if (recording) {\n                        const {data} = await stop();\n                        if (data.code === 200) {\n                            setMessage({type: 'success', message: data.message || '\u672a\u8bc6\u522b\u5230\u8bed\u97f3\u5185\u5bb9'});\n                        } else {\n                            setMessage({type: 'error', message: '\u8f6c\u6362\u9519\u8bef'});\n                        }\n                    } else {\n                        setMessage({type: 'warning', message: '\u5f00\u59cb\u8bed\u97f3\u8bc6\u522b'});\n                        start();\n                    }\n                    setRecording(!recording);\n                });\n            }}>{recording ? '\u6b63\u5728\u5f55\u5236' : '\u70b9\u51fb\u5f00\u59cb'}</Button>\n        </div>\n    </Flex>;\n};\n\nrender(<BaseExample/>);\n\n",scope:[{name:"_SpeechText",packageName:"@kne/current-lib_speech-text",importStatement:'import * as _SpeechText from "@kne-components/speech-text"',component:s},{name:"antd",packageName:"antd",component:a}]},{title:"\u5b9e\u65f6\u8bed\u97f3\u8bc6\u522b",description:"\u5b9e\u65f6\u8bed\u97f3\u8bc6\u522b",code:"const {speechTextRealTime} = _SpeechText;\nconst {Button, Alert, Flex} = antd;\nconst {default: axios} = _axios;\nconst {useState, useEffect, useRef} = React;\n\nconst BaseExample = () => {\n    const [message, setMessage] = useState({type: 'info', message: '\u5c1a\u672a\u5f00\u59cb'});\n    const [recording, setRecording] = useState(false);\n    const recordRef = useRef(null);\n    useEffect(() => {\n        recordRef.current = speechTextRealTime({\n            getToken: async () => {\n                try {\n                    const {data} = await axios({\n                        url: 'https://ct.deeperagi.com/action/papi/ai/vCMA02/createToken',\n                        method: 'POST',\n                        data: JSON.stringify({\n                            \"avgtype\": \"11111\"\n                        }),\n                        headers: {\n                            'content-type': 'application/json'\n                        }\n                    });\n                    return {\n                        token: data.token, appKey: data.appKey\n                    };\n                } catch (e) {\n                    return {\n                        \"appKey\": \"TYcsiL5CZb9hd9DR\", \"token\": \"e80b7d7f6f054f91a79a14a67cb7f34c\"\n                    };\n                }\n            }, onChange: ({message}) => {\n                setMessage({type: 'success', message});\n            }\n        });\n    }, []);\n\n    return <Flex vertical gap={10}>\n        <Alert type={message.type} message={message.message}/>\n        <div>\n            <Button onClick={() => {\n                recordRef.current.then(async ({start, stop}) => {\n                    setMessage({type: 'warning', message: '\u6b63\u5728\u8bc6\u522b\uff0c\u8bf7\u7a0d\u7b49'});\n                    if (recording) {\n                        await stop();\n                        setMessage({type: 'info', message: '\u8bc6\u522b\u7ed3\u675f'});\n                    } else {\n                        setMessage({type: 'warning', message: '\u5f00\u59cb\u8bed\u97f3\u8bc6\u522b'});\n                        start();\n                    }\n                    setRecording(!recording);\n                });\n            }}>{recording ? '\u6b63\u5728\u5f55\u5236' : '\u70b9\u51fb\u5f00\u59cb'}</Button>\n        </div>\n    </Flex>;\n};\n\nrender(<BaseExample/>);\n\n",scope:[{name:"_SpeechText",packageName:"@kne/current-lib_speech-text",importStatement:'import * as _SpeechText from "@kne-components/speech-text"',component:s},{name:"antd",packageName:"antd",component:a},{name:"_axios",packageName:"axios",component:n(8494)}]}]}}},c={name:"speech-text",version:"1.1.0","open-version":!0,"public-url":"/speech-text",modules:[{name:"speech-text",baseDir:"/home/runner/work/speech-text/speech-text",description:"",packageName:"@kne-components/speech-text"}]}}}]);
//# sourceMappingURL=690.1a358473.chunk.js.map