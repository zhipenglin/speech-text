{"version":3,"file":"static/js/830.f509912c.chunk.js","mappings":"uNAIA,MAAMA,EAASC,UACX,MAAM,IAACC,GAAOC,OAAOC,OAAO,CAAC,EAAGC,GAC1BC,EAAMC,IAAS,CACjBC,KAAM,MAAOC,WAAY,KAAOC,QAAS,KAE7C,MAAO,CACHC,MAAOV,gBACG,IAAIW,SAAQ,CAACC,EAASC,KACxBR,EAAIS,KAAKF,EAASC,EAAO,IAE7BR,EAAIK,OAAO,EACZK,KAAMf,UACL,MAAMgB,QAAa,IAAIL,SAAQ,CAACC,EAASC,KACrCR,EAAIU,MAAME,IACNL,EAAQ,IAAIM,KAAK,CAACD,GAAO,YAAa,CAACV,KAAM,cAAc,GAC5DM,EAAO,IAGd,OADAR,EAAIc,cACSC,IAAAA,SAAenB,EAAK,CAACe,QAAM,EAE/C,C","sources":["../../src/index.js"],"sourcesContent":["import axios from 'axios';\nimport Recorder from 'recorder-core';\nimport 'recorder-core/recorder.wav.min';\n\nconst record = async (options) => {\n    const {url} = Object.assign({}, options);\n    const rec = Recorder({\n        type: \"wav\", sampleRate: 16000, bitRate: 16\n    });\n    return {\n        start: async () => {\n            await new Promise((resolve, reject) => {\n                rec.open(resolve, reject);\n            });\n            rec.start();\n        }, stop: async () => {\n            const file = await new Promise((resolve, reject) => {\n                rec.stop((blob) => {\n                    resolve(new File([blob], 'audio.wav', {type: 'audio/wav'}));\n                }, reject);\n            });\n            rec.close();\n            return await axios.postForm(url, {file});\n        }\n    };\n};\n\nexport default record;\n"],"names":["record","async","url","Object","assign","options","rec","Recorder","type","sampleRate","bitRate","start","Promise","resolve","reject","open","stop","file","blob","File","close","axios"],"sourceRoot":""}